#!/usr/bin/env vx -Z

let bindir = dirname realpath argv[ 0 ]
let libdir = bindir "/../lib/"

def import (lib) { eval (load, realpath) libdir lib ".vy" }

let readline = import "readline"
let services = import "services"

def fail (line)  { throw "truncated response: '" line "'" }

def getline (fd) { readline( fd, fail ) }

def tolower (c)
{
	if c in 'A' .. 'Z' then
	{
		c = byte (u8 c + 0x20)
	}
	
	return c
}

let request = getline IN map tolower per str

if request == "help" then
{
	OUT <== services map { v "\r\n" } per str
}
else if request in services then
{
	let service = bindir "/" request "-service.vx"
	
	OUT <== "+OK " request "\r\n"
	
	execv( service, [ service ] )
}
else
{
	OUT <== "-NO " request "\r\n"
}
