#!/usr/bin/env minivx -Z

let bindir = dirname realpath argv[ 0 ]
let libdir = bindir "/../lib/"

def import (lib) { eval (load, realpath) libdir lib ".vsl" }

let basename = import "basename";

let property = argv[ 1 ]
let app_path = argv[ 2 ]

let arguments = *argv[ 3 -> argc ]

let app_name = basename app_path

let ams_68k_bin = "../ams-68k-bin"

let ams_bin = ams_68k_bin "/bin"
let ams_lib = ams_68k_bin "/lib"

let fs_root = dirname app_path

def ams_mod (subname)
{
	if subname == "fs" and (let disk = getenv "AMS_DISK") then
	{
		return "-m", "[", ams_lib "/ams-" subname, "--disk", disk, "]"
	}
	
	return "-m" ams_lib "/ams-" subname
}

let mods = ["core fs rsrc" / ' '] map ams_mod

let program = ams_bin "/get-" property

let freemount-srv = "freemountd -q --root" / ' ', fs_root
let xv68k-command = "xv68k", "-tS", *mods, program, app_name, arguments
let graft-command = "graft", freemount-srv, "//", xv68k-command

run [graft-command]
