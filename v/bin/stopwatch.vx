#!/usr/bin/env vx

var start = ()
var timer

OUT <== "-:--.--"

let events = channel()

var reader = thread lambda
{
	while var input = IN.read 1 do
	{
		let c = *input
		
		if c == ' ' then
		{
			events <== c
		}
	}
}

def tens (x)
{
	return ("0" * (x < 10)) x
}

for ev in events do
{
	if ev == '\0' then
	{
		let micro_dt = utime() - start
		let centi_dt = micro_dt div 10^4
		let cc = centi_dt mod 100
		let dt = centi_dt div 100
		let m  = dt div 60
		let ss = dt mod 60
		
		OUT <== "\r" m ":" (tens ss) "." tens cc
	}
	else if ev == ' ' then
	{
		if (+) start then
		{
			OUT <== "\n"
			
			exit 0
		}
		
		start = utime()
		
		timer = thread { while true do { events <== '\0'; sleep 0.005 } }
	}
}
