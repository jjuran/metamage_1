#!/usr/bin/env minivx -Z

const bindir = dirname realpath argv[ 0 ]
const libdir = bindir "/../lib/v/"

const import = { const path = libdir _ ".vsl"; eval( load path, path ) }

const info_plist = import "info_plist"
const render_xml = import "render_xml"

const Tab = "\t"

const info-txt = load argv[ 1 ]

var Build-origin-path = (dirname argv[ 1 ]) "/Build-origin.txt"

try
{
	stat Build-origin-path
}
catch
{
	Build-origin-path = null
}

var more-txt = ""

if Build-origin-path then
{
	const build-origin = hex unhex *(load Build-origin-path).lines()
	
	chdir dirname argv[ 1 ]
	
	const command = [ "git", "rev-list", build-origin "..HEAD", "--count" ]
	
	try
	{
		const build-number = output-from-run command
		
		more-txt = "CFBundleVersion: " (rep *build-number.lines()) "\n"
	}
	catch ( ... )
	{
	}
}

def comma-terminated { if _[ _.length - 1 ] in ":[" then { _ } else { _ "," } }

const lines = (info-txt more-txt).lines() ver bool map comma-terminated

const info = eval "[" join( "\n", *lines, "]" )

const plist = info_plist.convert info

print info_plist.version
print info_plist.doctype

def printer
{
	const depth, const text = _
	
	const tabs = Tab * depth
	
	print tabs text
}

render_xml( printer, plist )
